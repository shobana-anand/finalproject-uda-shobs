# Workflow name
name: Backend Continuous Integration

# Triggers for the workflow
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:
      
  # Automatic trigger on pull request events targeting the main branch
  pull_request:
    branches:
      - main

  # Automatic trigger on push
  push:
    branches:
      - main    

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Prepare Pipenv environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      # Install Dependencies
      - name: Install dependencies
        run: cd starter/backend && pipenv install 
       
      # Run Lint
      - name: Lint code
        run: pipenv run lint

  test:
    runs-on: ubuntu-latest

    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Prepare Pipenv environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      # Install Dependencies
      - name: Install dependencies
        run: cd starter/backend && pipenv install 

      # Run Tests
      - name: Run tests
        run: cd starter/backend && pipenv run test  

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Build Flask App
      - name: Build application
        run: cd starter/backend && docker build -t my-flask-app .
          